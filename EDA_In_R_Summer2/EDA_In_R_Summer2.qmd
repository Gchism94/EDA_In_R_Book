---
title: "Exploratory  data analysis in R - Exploring like a data adventurer"
author: "Greg Chism"
email: "gchism@arizona.edu"
date: "2022/05/09"
output: 
  html_document: 
    theme: readable
    toc: yes
---


```{r setup, include = FALSE} 
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

## Purpose of workshop
__Exploring the normality of numerical columns in a novel data set and producing publication quality tables and reports__ 

***

## Objectives
1. Using summary statistics to better understand individual columns in a data set. 
2. Assessing data normality in numerical columns. 
3. Producing a publishable HTML with summary statistics and normality tests for columns within a data set. 

***

#### Required setup 
We first need to prepare our environment with the necessary packages
```{r, results = 'hide'}
options(repos = list(CRAN = "http://cran.rstudio.com/"))
options(digits = 2)

install.packages("pacman")

pacman::p_load(dlookr, # Exploratory data analysis
       formattable, # HTML tables from R outputs
       kableExtra, # Alternative to formattable
       knitr, # Needed to write HTML reports
       nycflights13, # Holds the flights data set
       tidyverse) # Powerful data wrangling package suite
```

***

### 1.0 Load and examine a data set
```{r}
# Let's load a data set from the flights data set
data("flights")

# What does the data look like?
formattable(head(flights))
```

***

#### 1.1 Diagnose your data
```{r}
# What are the properties of the data
formattable(diagnose(flights))
```
* `variables`: name of each variable
* `types`: data type of each variable
* `missing_count`: number of missing values 
* `missing_percent`: percentage of missing values 
* `unique_count`: number of unique values
* `unique_rate`: rate of unique value - unique_count / number of observations

***
#### Box plot
![](https://d33wubrfki0l68.cloudfront.net/6a759d8217be119e3409d1eb8e6cd78913bcc86f/c1995/img/evol-ggplot/boxplot.png) 
_(c) Cédric Scherer_


***

#### Skewness
![](https://aakinshin.net/posts/misleading-skewness/img/skew_intro-dark.png)
_(c) Andrey Akinshin_

***

__NOTE__

* “Skewness” has multiple definitions. Several underlying equations mey be at play
* Skewness is “designed” for distributions with one peak (_unimodal_); it’s meaningless for distributions with multiple peaks (_multimodal_).
* Most default skewness definitions are not robust: a single outlier could completely distort the skewness value.
* We can’t make conclusions about the locations of the mean and the median based on the skewness sign.

***

#### Kurtosis
![](https://aakinshin.net/posts/misleading-kurtosis/img/kurt_intro-dark.png)
_(c) Andrey Akinshin_

***

__NOTE__

* There are multiple definitions of kurtosis - i.e., “kurtosis” and “excess kurtosis,” but there are other definitions of this measure.
* Kurtosis may work fine for distributions with one peak (_unimodal_); it’s meaningless for distributions with multiple peaks (_multimodal_).
* The classic definition of kurtosis is not robust: it could be easily spoiled by extreme outliers.

***

#### 1.2 Describe your continuous data
```{r}
# Summary statistics 
formattable(describe(flights))
```
* `n` : number of observations excluding missing values
* `na` : number of missing values
* `mean` : arithmetic average
* `sd` : standard deviation
* `se_mean` : standard error mean. sd/sqrt(n)
* `IQR` : interquartile range (Q3-Q1)
* `skewness` : skewness
* `kurtosis` : kurtosis
* `p25` : Q1. 25% percentile
* `p50` : median. 50% percentile
* `p75` : Q3. 75% percentile
* `p01`, `p05`, `p10`, `p20`, `p30` : 1%, 5%, 20%, 30% percentiles
* `p40`, `p60`, `p70`, `p80` : 40%, 60%, 70%, 80% percentiles
* `p90`, `p95`, `p99`, `p100` : 90%, 95%, 99%, 100% percentiles

***

#### 1.3 Describe your continuous data: refined
The above is pretty overwhelming, and most people don't care about percentiles outside of Q1, Q3, and the median (Q2). 
```{r}
# Summary statistics, selecting the desired ones
RefinedTable <- flights %>%
  describe() %>%
  select(described_variables, n, na, mean, sd, se_mean, IQR, skewness, kurtosis, p25, p50, p75)

formattable(RefinedTable)
```

***

#### 1.4 Describe categorical variables
```{r}
formattable(diagnose_category(flights))
```
* `variables`: category names
* `levels`: group names within categories
* `N`: number of observation
* `freq`: number of observation at group level / number of observation at category level
* `ratio`: percentage of observation at group level / number of observation at category level
* `rank`: rank of the occupancy ratio of levels (order in which the groups are in the category)

*** 

#### 1.5 Group descriptive statistics
```{r}
GroupTable <- flights %>%
  group_by(carrier) %>%
  select(carrier, dep_delay, arr_delay, air_time) %>%
  describe() %>%
  select(described_variables, carrier, n, na, mean, sd, se_mean, IQR, skewness, kurtosis, p25, p50, p75)

formattable(GroupTable)
```

***

### 2.0 Testing normality
* Shapiro-Wilk test & Q-Q plots
* Testing overall normality of two columns
* Testing normality of groups

***

#### 2.1 Normality of columns

***

##### Shapiro-Wilk test
Shapiro-Wilk test looks at whether a target distribution is sample form a normal distribution
```{r}
FlightsNorm <- flights %>%
  select(dep_delay, arr_delay, air_time) 

formattable(normality(FlightsNorm))
```

***

##### Q-Q plots
Q-Q plots look at the quartiles of a target data set and plot it against predicted quartiles from a normal distribution

```{r}
FlightsNorm %>%
plot_normality(dep_delay, arr_delay, air_time)
```

***

#### 2.2 Normality within groups
Looking within carrier at the subgroup normality
```{r}
# Shapiro-Wilk test
NormCarrierTable <- flights %>%
  group_by(carrier) %>%
  select(carrier, dep_delay) %>%
  normality()

formattable(NormCarrierTable)

# Q-Q plot
flights %>%
  group_by(carrier) %>%
  select(carrier, dep_delay) %>%
  plot_normality()
```

***

### 3.0 Produce an HTML normality summary of a data set
```{r}
# Remove the '#' below to reproduce an HTML from an R script. 
#eda_web_report(flights)
```
